/*adding css root variables to use throughout*/
:root {
    --primary: rgb(72, 71, 72);
    --business: rgb(57, 57, 190);
    --personal: rgba(250, 119, 208, 0.912);
    --gray: #6c6c6c;
    --dark: rgb(43, 43, 46);
    --danger: crimson;

    --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    --business-glow: 0px 0px 4px rgba(57, 57, 190);
    --personal-glow: 0px 0px 4px rgba(223, 116, 239);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
}

html {
    height: 100%;
}

body {
    margin: 0;
}

/*animation styling*/
.bg {
    animation: slide 3s ease-in-out infinite alternate;
    background-image: linear-gradient(-60deg, rgb(33, 33, 33) 50%, rgb(166, 167, 167) 50%);
    bottom: 0;
    left: -50%;
    opacity: .3;
    position: fixed;
    right: -50%;
    top: 0;
    z-index: -1;
}

.content {
    background-color: white;
    margin-top: 2rem;
    opacity: .9;
    padding-top: 1rem;
    padding-bottom: 1rem;
    border: 10px solid black;
    border-image: url("data:image/svg+xml;charset=utf-8,%3Csvg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3ClinearGradient id='g' x1='0%25' y1='0%25' x2='0%25' y2='100%25'%3E%3Cstop offset='0%25' stop-color='%23cffffe' /%3E%3Cstop offset='25%25' stop-color='%23f9f7d9' /%3E%3Cstop offset='50%25' stop-color='%23fce2ce' /%3E%3Cstop offset='100%25' stop-color='%23ffc1f3' /%3E%3C/linearGradient%3E %3Cpath d='M1.5 1.5 l97 0l0 97l-97 0 l0 -97' stroke-linecap='square' stroke='url(%23g)' stroke-width='3'/%3E %3C/svg%3E") 1;
}

.bg2 {
    animation-direction: alternate-reverse;
    animation-duration: 4s;
}

.bg3 {
    animation-duration: 5s;
}

@keyframes slide {
    0% {
        transform: translateX(-25%);
    }

    100% {
        transform: translateX(25%);
    }
}

/*sections and headings styling*/
section {
    margin-top: 2rem;
    margin-bottom: 2rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
}

h3 {
    color: var(--gray);
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;

}

h4 {
    color: var(--gray);
    font-size: 0.875rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

/*removing all styling from the buttons*/
input:not([type="radio"]):not([type="checkbox"]),
button {
    appearance: none;
    border: none;
    outline: none;
    background: none;
    cursor: initial;
}

/*greeting styling changed*/
.greeting {
    display: flex;
}

.greeting .title input {
    margin-left: 0.5rem;
    flex: 1 1 0%;
    min-width: 0;
}

.greeting .title,
.greeting .title input {
    color: var(--dark);
    font-size: 1.5rem;
    font-weight: 700;
}

/*create-todo input styling*/
.create-todo input[type="text"] {
    display: block;
    width: 100%;
    font-size: 1.125rem;
    padding: 1rem 1.5rem;
    color: var(--dark);
    background-color: rgb(219, 207, 226);
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
    margin-bottom: 1.5rem;
}

.create-todo .options {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 1rem;
    margin-bottom: 1.5rem;
}

/*business and personal category options styling*/
.create-todo .options label {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1.5rem;
    background-color: rgb(237, 217, 242);
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
    cursor: pointer;
}

input[type="radio"],
input[type="checkbox"] {
    display: none;
}

/*bubble personal and bubble business styling*/
.bubble {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid var(--business);
    box-shadow: var(--business-glow);
}

.bubble.personal {

    border: 2px solid var(--personal);
    box-shadow: var(--personal-glow);
}

/*adding a slight wase in and out transition for general styling*/
.bubble::after {
    content: "";
    display: block;
    opacity: 0;
    width: 0px;
    height: 0px;
    background-color: var(--business);
    box-shadow: var(--business-glow);
    border-radius: 50%;
    transition: 0.2s ease-in-out;
}

.bubble.personal::after {
    background-color: var(--personal);
    box-shadow: var(--personal-glow);
}

/*bubble checking styling when clicked in category*/
input:checked~.bubble::after {
    width: 10px;
    height: 10px;
    opacity: 1;
}

.create-todo .options label div {
    color: var(--dark);
    font-size: 1.125rem;
    margin-top: 1rem;
}

/*styling for add task button*/
.create-todo input[type="submit"] {
    display: block;
    width: 100%;
    font-size: 1, 125rem;
    padding: 1rem 1.5rem;
    color: rgb(255, 255, 255);
    background-color: var(--primary);
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
    cursor: pointer;
    transition: 0.2s ease-in-out;
}

/*hover effect for add task button*/
.create-todo input[type="submit"]:hover {
    opacity: 0.75;
}

.todo-list .list {
    margin: 1rem 0;
}

/*styling for task list*/
.todo-list .todo-item {
    display: flex;
    align-items: center;
    background-color: rgb(221, 211, 231);
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
    margin-bottom: 1rem;
}

/*styling for bubble checkbox next to task*/
.todo-item label {
    display: block;
    margin-right: 1rem;
    cursor: pointer;
}

/*edit and delete button styling*/
.todo-item .todo-content {
    flex: 1 1 0%;
}

.todo-item .todo-content input {
    color: var(--dark);
    font-size: 1.125rem;
}

.todo-item .actions {
    display: flex;
    align-items: center;
}

/*futher styling for edit and delete buttons*/
.todo-item .actions button {
    display: block;
    padding: 0.5rem;
    border-radius: 0.25rem;
    color: rgb(255, 255, 255);
    cursor: pointer;
    transition: 0.3 ease-in-out;
}

/*hover on click, dlete and edit buttons*/
.todo-item .actions button:hover {
    opacity: 0.75;
}

/*colour styling for edit and delete buttons*/
.todo-item .actions .edit {
    margin-right: 0.5rem;
    background-color: var(--primary);
}

.todo-item .actions .delete {
    background-color: var(--danger);
}

/*line-through styling for completed task*/
.todo-item.done .todo-content input {
    text-decoration: line-through;
    color: var(--gray);
}